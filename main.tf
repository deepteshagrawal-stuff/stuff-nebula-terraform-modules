resource "aws_s3_bucket" "stuff-nebula-terraform-modules" {
  bucket = "stuff-terraform-nebula-modules"
  tags = {
    Name        = "stuff-terraform-nebula-modules"
  }
}

resource "aws_s3_bucket_versioning" "enable" {
  bucket = aws_s3_bucket.stuff-nebula-terraform-modules.id

  versioning_configuration {
    status = "Enabled"
  }
}

resource "aws_s3_bucket_acl" "private" {
  bucket = aws_s3_bucket.stuff-nebula-terraform-modules.id
  acl    = "private"
}


# Semantic versioning must be implemented
# Folders/Keys will be generated by the upload
# Use ADO to push the files to s3 bucket - easy peasy


# locals {
#     version = "1.0.0"
# }

# resource "aws_s3_object" "modules" {
#     for_each = fileset("/home/tennengabr/code/stuff/resources/stuff-nebula-terraform-modules/modules/", "*")

#     bucket = aws_s3_bucket.stuff-nebula-terraform-modules.id
#     key = "${each.key}/"
#     source = "/home/tennengabr/code/stuff/resources/stuff-nebula-terraform-modules/modules/${each.key}"
#     etag = filemd5("/home/tennengabr/code/stuff/resources/stuff-nebula-terraform-modules/modules/${each.key}")


#     ## This works uploading a single ZIP
#     # bucket = aws_s3_bucket.stuff-nebula-terraform-modules.id
#     # key = "test/folder.zip"
#     # source = "/home/tennengabr/code/stuff/resources/stuff-nebula-terraform-modules/modules/stuff-nebula-rds.zip"
#     # etag = filemd5("/home/tennengabr/code/stuff/resources/stuff-nebula-terraform-modules/modules/stuff-nebula-rds.zip")

# }